#!/bin/bash

# Echo Language Examples Test Script
# –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

echo "=================================================="
echo "üöÄ Echo Language Examples Test Suite"
echo "=================================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Å–æ–±—Ä–∞–Ω
if [ ! -f "bin/echo" ]; then
    echo "‚ö†Ô∏è  –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–±–∏—Ä–∞–µ–º..."
    make all
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞"
        exit 1
    fi
    echo "‚úÖ –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä —Å–æ–±—Ä–∞–Ω"
    echo ""
fi

# –°—á–µ—Ç—á–∏–∫–∏
total_examples=0
successful_examples=0
failed_examples=0

# –ú–∞—Å—Å–∏–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∏–º–µ—Ä–∞—Ö
declare -a examples=(
    "01_hello_world.ec:–ë–∞–∑–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –∏–º–ø–æ—Ä—Ç—ã"
    "02_basic_types.ec:–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∞–≤—Ç–æ–≤—ã–≤–æ–¥"
    "03_structs_basics.ec:–û—Å–Ω–æ–≤—ã —Å—Ç—Ä—É–∫—Ç—É—Ä"
    "04_control_flow.ec:–£–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
    "05_simple_generics.ec:–ü—Ä–æ—Å—Ç—ã–µ Generic —Ñ—É–Ω–∫—Ü–∏–∏"
    "06_modules_imports.ec:–ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
    "07_data_structures.ec:–°–ª–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö"
    "08_generic_algorithms.ec:Generic –∞–ª–≥–æ—Ä–∏—Ç–º—ã"
    "09_calculator.ec:–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
    "10_advanced_showcase.ec:–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"
)

echo "–ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–º–µ—Ä–æ–≤: ${#examples[@]}"
echo ""

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞
test_example() {
    local example_info=$1
    local filename=$(echo $example_info | cut -d':' -f1)
    local description=$(echo $example_info | cut -d':' -f2)
    
    if [ ! -f "examples/$filename" ]; then
        echo "‚ö†Ô∏è  –§–∞–π–ª examples/$filename –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º: $filename"
    echo "   üìÑ $description"
    
    # –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞
    ./bin/echo "examples/$filename" > "/tmp/echo_test_${filename}.log" 2>&1
    local exit_code=$?
    
    if [ $exit_code -eq 0 ]; then
        echo "   ‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"
        
        # –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å C –∫–æ–¥ –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
        if [ -f "examples/${filename%.*}.c" ]; then
            echo "   üîß –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º C –∫–æ–¥..."
            gcc -o "/tmp/echo_${filename%.*}" "examples/${filename%.*}.c" "examples/echo_runtime.c" 2>/dev/null
            if [ $? -eq 0 ]; then
                echo "   ‚úÖ C –∫–æ–¥ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ"
                # –ú–æ–∂–µ–º –¥–∞–∂–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
                timeout 5s "/tmp/echo_${filename%.*}" > "/tmp/echo_run_${filename}.log" 2>&1
                if [ $? -eq 0 ]; then
                    echo "   üéâ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
                fi
                rm -f "/tmp/echo_${filename%.*}"
            else
                echo "   ‚ö†Ô∏è  C –∫–æ–¥ –Ω–µ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è, –Ω–æ Echo-–∫–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ—à–ª–∞"
            fi
        fi
        
        return 0
    else
        echo "   ‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ (–∫–æ–¥: $exit_code)"
        echo "   üìù –õ–æ–≥–∏ –≤ /tmp/echo_test_${filename}.log"
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
for example in "${examples[@]}"; do
    total_examples=$((total_examples + 1))
    
    if test_example "$example"; then
        successful_examples=$((successful_examples + 1))
    else
        failed_examples=$((failed_examples + 1))
    fi
    
    echo ""
done

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "=================================================="
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "=================================================="
echo "üìã –í—Å–µ–≥–æ –ø—Ä–∏–º–µ—Ä–æ–≤: $total_examples"
echo "‚úÖ –£—Å–ø–µ—à–Ω–æ: $successful_examples"
echo "‚ùå –° –æ—à–∏–±–∫–∞–º–∏: $failed_examples"
echo ""

if [ $failed_examples -eq 0 ]; then
    echo "üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–ª–∏—á–Ω–æ!"
    echo "üöÄ Echo Language –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
else
    echo "‚ö†Ô∏è  $failed_examples –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–º–µ—é—Ç –ø—Ä–æ–±–ª–µ–º—ã"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ /tmp/echo_test_*.log"
fi

echo ""
echo "=================================================="
echo "üéì –ù–∞—á–Ω–∏—Ç–µ –∏–∑—É—á–µ–Ω–∏–µ —Å examples/01_hello_world.ec"
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: examples/README.md"
echo "üõ†Ô∏è  –ü—Ä–∞–≤–∏–ª–∞ generics: docs/generics_rules.md"
echo "=================================================="

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–µ —Ç–µ—Å—Ç—ã
exit $failed_examples 